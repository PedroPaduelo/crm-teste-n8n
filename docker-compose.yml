version: '3.8'

services:
  # Banco de Dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: crm_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: crm_db
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - crm_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crm_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://crm_user:${DB_PASSWORD}@db:5432/crm_db
      JWT_SECRET: ${JWT_SECRET}
      WHATSAPP_API_TOKEN: ${WHATSAPP_API_TOKEN}
      WHATSAPP_PHONE_NUMBER_ID: ${WHATSAPP_PHONE_NUMBER_ID}
      VERIFY_TOKEN: ${VERIFY_TOKEN}
      FRONTEND_URL: ${FRONTEND_URL}
      N8N_WEBHOOK_URL: ${N8N_WEBHOOK_URL}
      N8N_API_KEY: ${N8N_API_KEY}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3001:3001"
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - crm_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crm_frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL}
      VITE_N8N_WEBHOOK_URL: ${VITE_N8N_WEBHOOK_URL}
      VITE_NODE_ENV: production
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - crm_network

  # N8N (Opcional - para automação)
  n8n:
    image: n8nio/n8n:latest
    container_name: crm_n8n
    restart: unless-stopped
    environment:
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: ${N8N_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_PASSWORD}
      N8N_HOST: ${N8N_HOST}
      N8N_PORT: 5678
      N8N_PROTOCOL: https
      WEBHOOK_URL: ${WEBHOOK_URL}
      N8N_SECURE_COOKIE: false
      N8N_METRICS: true
      N8N_DIAGNOSTICS_ENABLED: false
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
    networks:
      - crm_network
    depends_on:
      - backend

  # Redis (Opcional - para cache e filas)
  redis:
    image: redis:7-alpine
    container_name: crm_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crm_network
    command: redis-server --appendonly yes

  # PgAdmin (Opcional - para gerenciamento do banco)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: crm_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - crm_network
    depends_on:
      - db

volumes:
  postgres_data:
    driver: local
  n8n_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  crm_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16